package open3d.objects{	import open3d.materials.Material;	/**	 * Cube	 * @author katopz	 */	public class Cube extends Mesh	{		public function Cube(size:Number=100, material:Material = null ) 		{			// 8 vertices			_vin.push(size,-size,size);			_vin.push(size,-size,-size);						_vin.push(-size,-size,-size);			_vin.push(-size,-size,size);						_vin.push(size,size,size);			_vin.push(size,size,-size);						_vin.push(-size,size,-size);			_vin.push(-size,size,size);						// TODO : ?			_triangles.uvtData.push(0, 0, 1);			_triangles.uvtData.push(1, 0, 1);						_triangles.uvtData.push(1, 1, 1);			_triangles.uvtData.push(0, 1, 1);						_triangles.uvtData.push(0, 0, 1);			_triangles.uvtData.push(1, 0, 1);						_triangles.uvtData.push(1, 1, 1);			_triangles.uvtData.push(0, 1, 1);						/*			   4-------5			 / |      /|			0--------1 |			|  |     | |			|  7-----|-6			|/       |/			3--------2			*/						// 4 sides			addFaces(0,1,2,3);			addFaces(1,5,6,2);			addFaces(4,7,6,5);			addFaces(4,0,3,7);						// top down			addFaces(0,4,5,1);			addFaces(3,2,6,7);						buildFaces(material);		}		public function addFaces(i0:uint, i1:uint, i2:uint, i3:uint):void 		{			_triangles.indices.push(i0, i1, i2);			_triangles.indices.push(i2, i3, i0);		}	}}